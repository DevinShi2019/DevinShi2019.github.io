<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DevinShi2019</title>
  
  <subtitle> </subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shiyutian.com/"/>
  <updated>2021-05-28T04:38:02.889Z</updated>
  <id>https://shiyutian.com/</id>
  
  <author>
    <name>Devin Shi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo博客系列-4：使用Github Action将语雀文档同步到blog</title>
    <link href="https://shiyutian.com/2021/05/27/yuque/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97-4%EF%BC%9A%E4%BD%BF%E7%94%A8Github%20Action%E5%B0%86%E8%AF%AD%E9%9B%80%E6%96%87%E6%A1%A3%E5%90%8C%E6%AD%A5%E5%88%B0blog/"/>
    <id>https://shiyutian.com/2021/05/27/yuque/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97-4%EF%BC%9A%E4%BD%BF%E7%94%A8Github%20Action%E5%B0%86%E8%AF%AD%E9%9B%80%E6%96%87%E6%A1%A3%E5%90%8C%E6%AD%A5%E5%88%B0blog/</id>
    <published>2021-05-27T14:01:00.000Z</published>
    <updated>2021-05-28T04:38:02.889Z</updated>
    
    <content type="html"><![CDATA[<h2 id="具体流程"><a class="markdownIt-Anchor" href="#具体流程"></a> 具体流程</h2><ul><li>Hexo 博客搭建好，将源码上传到 Github</li><li>在 Github 中开启 Github Actions 服务，配置 yaml 格式的 deploy 脚本</li><li>编写 serverless 函数 ，测试可以触发 Github Actions，获取触发地址</li><li>在语雀中创建知识库并发布一篇文章，必须发布过文章，因为 yuque-hexo 会删除 _posts 文件夹</li><li>配置语雀的 webhook，使其可调用 serverless 函数</li><li>触发 Github Actions 实现 Hexo 的自动部署，生成静态文件并发布</li></ul><h2 id="使用-github-hexo"><a class="markdownIt-Anchor" href="#使用-github-hexo"></a> 使用 Github + Hexo</h2><p><a href="https://blog.shiyutian.com/2019/11/26/yuque/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97-1%EF%BC%9A%E6%90%AD%E5%BB%BAGithubPages%20+%20Hexo%E5%8D%9A%E5%AE%A2/">Hexo 博客系列-1：搭建 GithubPages + Hexo 博客</a></p><h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2><h2 id="在-github-中使用-github-actions"><a class="markdownIt-Anchor" href="#在-github-中使用-github-actions"></a> 在 Github 中使用 Github Actions</h2><ol><li>在 Hexo 源码仓库的页面选择<code>Actions</code> -&gt; <code>Set up a workflow yourself</code>，进行网页编写</li><li>在本地环境根目录创建<code>.github/workflows</code>文件夹，里面放写好的 <code>yaml</code> 脚本</li></ol><p>具体脚本如下:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript"># workflow name<br><span class="hljs-attr">name</span>: Deploy To Github Pages<br><br># 当有 push 到仓库和外部触发的时候就运行<br><span class="hljs-attr">on</span>: [push, workflow_dispatch]<br><br># YUQUE_TOKEN<br># GITHUB_PERSONAL_API_TOKEN<br><span class="hljs-attr">jobs</span>:<br>  deploy:<br>    name: Deploy Hexo Public To Pages<br>    runs-on: ubuntu-latest<br>    <span class="hljs-attr">env</span>:<br>      TZ: Asia/Shanghai<br><br>    <span class="hljs-attr">steps</span>:<br>    # check it to your workflow can access it<br>    # <span class="hljs-keyword">from</span>: https:<span class="hljs-comment">//github.com/actions/checkout</span><br>    - name: Checkout Repository master branch<br>      <span class="hljs-attr">uses</span>: actions/checkout@master<br><br>    # <span class="hljs-keyword">from</span>: https:<span class="hljs-comment">//github.com/actions/setup-node</span><br>    - name: Setup Node.js <span class="hljs-number">10.</span>x<br>      <span class="hljs-attr">uses</span>: actions/setup-node@master<br>      <span class="hljs-attr">with</span>:<br>        node-version: <span class="hljs-string">&quot;10.x&quot;</span><br><br>    # <span class="hljs-keyword">from</span> https:<span class="hljs-comment">//github.com/x-cold/yuque-hexo</span><br>    - name: Setup Hexo Dependencies and Generate Public Files<br>      <span class="hljs-attr">env</span>:<br>        YUQUE_TOKEN: $&#123;&#123; secrets.YUQUE_TOKEN &#125;&#125;<br>      <span class="hljs-attr">run</span>: |<br>        npm install hexo-cli -g<br>        npm install yuque-hexo -g<br>        npm install<br>        npm run start<br><br>    # <span class="hljs-keyword">from</span> https:<span class="hljs-comment">//github.com/peaceiris/actions-gh-pages</span><br>    - name: Deploy<br>      <span class="hljs-attr">uses</span>: peaceiris/actions-gh-pages@v3<br>      <span class="hljs-attr">with</span>:<br>        personal_token: $&#123;&#123; secrets.GITHUB_PERSONAL_API_TOKEN &#125;&#125;<br>        <span class="hljs-attr">external_repository</span>: 用户名/仓库<br>        <span class="hljs-attr">publish_branch</span>: master<br>        <span class="hljs-attr">publish_dir</span>: ./public<br>        <span class="hljs-attr">commit_message</span>: $&#123;&#123; github.event.head_commit.message &#125;&#125;<br></code></pre></td></tr></table></figure><p>​</p><h3 id="yuque_token-配置"><a class="markdownIt-Anchor" href="#yuque_token-配置"></a> YUQUE_TOKEN 配置</h3><p>在语雀中新建 Token，并添加此 Token 到 Hexo 源码仓库<code>Setting</code> -&gt; <code>Secrets</code>中添加变量 key 为 YUQUE_TOKEN ，值为实际的 token 值<br /><img src="https://cdn.nlark.com/yuque/0/2021/png/264294/1622125094633-dd8763b2-0ce2-4dd7-ab4a-fda525df4490.png#clientId=u19d8ecd1-3c6d-4&amp;from=paste&amp;height=1035&amp;id=u46b27b52&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1035&amp;originWidth=1907&amp;originalType=binary&amp;size=113842&amp;status=done&amp;style=none&amp;taskId=u3f98407c-62cc-401e-b331-12cb4289d3b&amp;width=1907" alt="image.png" /><br /><img src="https://cdn.nlark.com/yuque/0/2021/png/264294/1622125180151-963a2640-c4ad-4de7-bd58-09bee6abcb74.png#clientId=u3bc1a531-732f-4&amp;from=paste&amp;height=813&amp;id=u21ce58c5&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=813&amp;originWidth=1403&amp;originalType=binary&amp;size=123966&amp;status=done&amp;style=none&amp;taskId=u11477364-41c6-4eb0-a906-86cbe3aab66&amp;width=1403" alt="image.png" /></p><h3 id="github_personal_api_token-配置"><a class="markdownIt-Anchor" href="#github_personal_api_token-配置"></a> GITHUB_PERSONAL_API_TOKEN 配置</h3><p>Github 同理，点击 GitHub 用户设置页面 最下方的 Developer setting ，然后选择 Personal access tokens 来生成一个 token。然后添加到<code>Secrets</code>中即可<br /><img src="https://cdn.nlark.com/yuque/0/2021/png/264294/1622125359200-f21c50d1-8ee7-4949-ab0b-734cc61f016b.png#clientId=u3bc1a531-732f-4&amp;from=paste&amp;height=566&amp;id=u57031de8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=566&amp;originWidth=1200&amp;originalType=binary&amp;size=302931&amp;status=done&amp;style=none&amp;taskId=u005a8200-d0fb-4619-a517-2de4959676b&amp;width=1200" alt="image.png" /></p><p>​</p><h2 id="配置腾讯云函数"><a class="markdownIt-Anchor" href="#配置腾讯云函数"></a> 配置腾讯云函数</h2><ol><li>配置腾讯云函数登录腾讯云，搜索云函数，创建此处以 Python2.7 为例</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2021/png/264294/1622125492149-dfafba12-dc73-40f1-bccc-b8fe57fcca0e.png#clientId=u3bc1a531-732f-4&amp;from=paste&amp;height=482&amp;id=ud8fc2900&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=482&amp;originWidth=889&amp;originalType=binary&amp;size=31720&amp;status=done&amp;style=none&amp;taskId=u5cb44a9d-c445-4986-8b0d-d6bcb4fc74b&amp;width=889" alt="image.png" /><br /><img src="https://cdn.nlark.com/yuque/0/2021/png/264294/1622125554271-4cb247af-ea99-42f2-85e5-9c243453e126.png#clientId=u3bc1a531-732f-4&amp;from=paste&amp;height=873&amp;id=u9a55ea0d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=873&amp;originWidth=1462&amp;originalType=binary&amp;size=117834&amp;status=done&amp;style=none&amp;taskId=uba62086e-90ae-4220-9ba0-4b9a869d865&amp;width=1462" alt="image.png" /><br />详细代码如下</p><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf8 -*-</span><br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main_handler</span>(<span class="hljs-params">event, context</span>):</span><br>    r = requests.post(<span class="hljs-string">&quot;https://api.github.com/repos/$&#123;&#123;GithubUserName&#125;&#125;/$&#123;&#123;GithubRepo&#125;&#125;/actions/workflows/$&#123;&#123;workflowId&#125;&#125;/dispatches&quot;</span>,<br>    json = &#123;<span class="hljs-string">&quot;ref&quot;</span>:<span class="hljs-string">&quot;master&quot;</span>&#125;,<br>    headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>:<span class="hljs-string">&#x27;curl/7.52.1&#x27;</span>,<br>              <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>              <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;application/vnd.github.v3+json&#x27;</span>,<br>              <span class="hljs-string">&#x27;Authorization&#x27;</span>: <span class="hljs-string">&#x27;token $&#123;&#123;替换为你的githubToken&#125;&#125;&#x27;</span>&#125;)<br><br>    <span class="hljs-keyword">if</span> r.status_code == <span class="hljs-number">204</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;This&#x27;s OK!&quot;</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> r.status_code<br><br></code></pre></td></tr></table></figure><blockquote><p>如果不知道具体的 workflowId，可以在调用此接口获取</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">url:   https://api.github.com/repos/$&#123;&#123;GithubUserName&#125;&#125;/$&#123;&#123;GithubRepo&#125;&#125;/actions/workflows<br>method:  get<br>headers:  &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>:<span class="hljs-string">&#x27;curl/7.52.1&#x27;</span>,<br>   <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>              <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;application/vnd.github.v3+json&#x27;</span>,<br>              <span class="hljs-string">&#x27;Authorization&#x27;</span>: <span class="hljs-string">&#x27;token $&#123;&#123;替换为你的githubToken&#125;&#125;&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="创建云函数触发器"><a class="markdownIt-Anchor" href="#创建云函数触发器"></a> 创建云函数触发器</h3><p>选择 API 网关触发即可，生成触发器之后，通过触发器 URL 直接访问，即可调用云函数<br />​</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/264294/1622126679142-0142e6cc-fb25-4d65-b4ee-ddd93c9abf77.png#clientId=u3bc1a531-732f-4&amp;from=paste&amp;height=661&amp;id=u9891ed0a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=661&amp;originWidth=903&amp;originalType=binary&amp;size=38481&amp;status=done&amp;style=none&amp;taskId=u7f60d949-d807-44e7-8b40-95de0cd2f7d&amp;width=903" alt="image.png" /></p><h2 id="语雀配置"><a class="markdownIt-Anchor" href="#语雀配置"></a> 语雀配置</h2><p>注册，登录创建知识库–&gt;文档知识库–&gt;可见范围为互联网可见<br />工作台–&gt;知识库–&gt;找到新创建的知识库，管理–&gt;设置–&gt;路径进行自定义，后面有用<br /><img src="https://cdn.nlark.com/yuque/0/2021/png/264294/1622126805571-c3811d6e-1e77-4e97-af80-111af8d8c4d1.png#clientId=u3bc1a531-732f-4&amp;from=paste&amp;height=492&amp;id=jIpuX&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=492&amp;originWidth=895&amp;originalType=binary&amp;size=24910&amp;status=done&amp;style=none&amp;taskId=u6f9d471c-97db-484e-9f85-213b5dac859&amp;width=895" alt="image.png" /><br />工作台–&gt;知识库–&gt;找到新创建的知识库，管理–&gt;设置–&gt;开发者–&gt;名称任意。URL 为云函数的地址，即上面获取到的访问路径<br /><img src="https://cdn.nlark.com/yuque/0/2021/png/264294/1622126927418-6dc17af1-0339-4d18-990f-c69e73673572.png#clientId=u3bc1a531-732f-4&amp;from=paste&amp;height=789&amp;id=ude09aeb0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=789&amp;originWidth=1352&amp;originalType=binary&amp;size=82518&amp;status=done&amp;style=none&amp;taskId=u99bf6f88-192f-4086-9280-cdd7c354828&amp;width=1352" alt="image.png" /></p><h3 id="安装-yuque-hexo"><a class="markdownIt-Anchor" href="#安装-yuque-hexo"></a> 安装 yuque-hexo</h3><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json">npm install yuque-hexo --save<br></code></pre></td></tr></table></figure><p>编辑 package.json 文件，添加以下内容<br />​</p><p>Npm Scripts “start” 和 yuqueConfig，将操作命令合并为一个脚本，只需要执行 npm run start 即可完成语雀的同步和 Hexo 的清理和静态文件生成，yueque 记得要用最新版本</p><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json">&#123;<br><br> ...<br><br>  <span class="hljs-attr">&quot;scripts&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;start&quot;</span>: <span class="hljs-string">&quot;yuque-hexo clean &amp;&amp; yuque-hexo sync &amp;&amp; hexo clean &amp;&amp; hexo generate&quot;</span>,<br>    <span class="hljs-attr">&quot;build&quot;</span>: <span class="hljs-string">&quot;hexo generate&quot;</span>,<br>    <span class="hljs-attr">&quot;clean&quot;</span>: <span class="hljs-string">&quot;hexo clean&quot;</span>,<br>    <span class="hljs-attr">&quot;deploy&quot;</span>: <span class="hljs-string">&quot;hexo deploy&quot;</span>,<br>    <span class="hljs-attr">&quot;server&quot;</span>: <span class="hljs-string">&quot;hexo server&quot;</span><br>  &#125;,<br><br> ...<br><br>  <span class="hljs-attr">&quot;yuqueConfig&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;baseUrl&quot;</span>: <span class="hljs-string">&quot;https://www.yuque.com/api/v2&quot;</span>,<br>    <span class="hljs-attr">&quot;login&quot;</span>: <span class="hljs-string">&quot;语雀个人路径&quot;</span>,<br>    <span class="hljs-attr">&quot;repo&quot;</span>: <span class="hljs-string">&quot;知识库名称&quot;</span>,<br>    <span class="hljs-attr">&quot;mdNameFormat&quot;</span>: <span class="hljs-string">&quot;title&quot;</span>,<br>    <span class="hljs-attr">&quot;postPath&quot;</span>: <span class="hljs-string">&quot;source/_posts&quot;</span>,<br>    <span class="hljs-attr">&quot;onlyPublished&quot;</span>: <span class="hljs-literal">false</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/z_johnny/article/details/104629805/"><br /></a></p><p>PS: 本文参考<a href="https://www.zhwei.cn/hexo-github-actions-yuque/">https://www.zhwei.cn/hexo-github-actions-yuque/</a>，对最新的配置做了些优化</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;具体流程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#具体流程&quot;&gt;&lt;/a&gt; 具体流程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hexo 博客搭建好，将源码上传到 Github&lt;/li&gt;
&lt;li&gt;在 Github 中开启 Github Action
      
    
    </summary>
    
    
      <category term="博客" scheme="https://shiyutian.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo系列" scheme="https://shiyutian.com/tags/Hexo%E7%B3%BB%E5%88%97/"/>
    
      <category term="教程" scheme="https://shiyutian.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客系列-3：使用主题pure</title>
    <link href="https://shiyutian.com/2019/11/29/yuque/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97-3%EF%BC%9A%E4%BD%BF%E7%94%A8%E4%B8%BB%E9%A2%98pure/"/>
    <id>https://shiyutian.com/2019/11/29/yuque/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97-3%EF%BC%9A%E4%BD%BF%E7%94%A8%E4%B8%BB%E9%A2%98pure/</id>
    <published>2019-11-29T03:20:00.000Z</published>
    <updated>2021-05-28T04:38:03.009Z</updated>
    
    <content type="html"><![CDATA[<h2 id="特色"><a class="markdownIt-Anchor" href="#特色"></a> 特色</h2><ul><li>多语言</li><li>第三方评论框（友言、来必力、gitment、gitalk）</li><li>可展示个人豆瓣书单</li><li>可展示个人 github 托管项目</li><li>可设置支付宝、微信打赏</li></ul><h2 id="配置说明"><a class="markdownIt-Anchor" href="#配置说明"></a> 配置说明</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件</p><h2 id="安装主题"><a class="markdownIt-Anchor" href="#安装主题"></a> 安装主题</h2><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">git clone https://github.com/cofess/hexo-theme-pure.git themes/pure<br>cd themes/pure<br>rm -rf .git<br></code></pre></td></tr></table></figure><h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2><h2 id="启用-pure-主题"><a class="markdownIt-Anchor" href="#启用-pure-主题"></a> 启用 pure 主题</h2><p>打开站点配置文件，找到 theme 字段，将其值更改为 pure</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">theme: pure<br></code></pre></td></tr></table></figure><p>到此，主题安装完成。然后启动 Hexo 服务验证主题是否正确启用。</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">hexo s<br></code></pre></td></tr></table></figure><h2 id="安装插件"><a class="markdownIt-Anchor" href="#安装插件"></a> 安装插件</h2><h3 id="hexo-wordcount"><a class="markdownIt-Anchor" href="#hexo-wordcount"></a> <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a></h3><figure class="highlight ada"><table><tr><td class="code"><pre><code class="hljs ada">npm install hexo-wordcount <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h3 id="hexo-generator-json-content"><a class="markdownIt-Anchor" href="#hexo-generator-json-content"></a> <a href="https://github.com/alexbruno/hexo-generator-json-content">hexo-generator-json-content</a></h3><figure class="highlight maxima"><table><tr><td class="code"><pre><code class="hljs maxima">npm install hexo-generator-json-<span class="hljs-built_in">content</span> --<span class="hljs-built_in">save</span><br></code></pre></td></tr></table></figure><h3 id="hexo-generator-feed"><a class="markdownIt-Anchor" href="#hexo-generator-feed"></a> <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a></h3><figure class="highlight ada"><table><tr><td class="code"><pre><code class="hljs ada">npm install hexo-generator-feed <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h3 id="hexo-generator-sitemap"><a class="markdownIt-Anchor" href="#hexo-generator-sitemap"></a> <a href="https://github.com/hexojs/hexo-generator-sitemap">hexo-generator-sitemap</a></h3><figure class="highlight ada"><table><tr><td class="code"><pre><code class="hljs ada">npm install hexo-generator-sitemap <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h3 id="hexo-generator-baidu-sitemap"><a class="markdownIt-Anchor" href="#hexo-generator-baidu-sitemap"></a> <a href="https://github.com/coneycode/hexo-generator-baidu-sitemap">hexo-generator-baidu-sitemap</a></h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span>hexo-generator-<span class="hljs-keyword">baidu-sitemap </span>--save<br></code></pre></td></tr></table></figure><h2 id="主题配置"><a class="markdownIt-Anchor" href="#主题配置"></a> 主题配置</h2><h3 id="设置语言"><a class="markdownIt-Anchor" href="#设置语言"></a> 设置语言</h3><p>打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应 themes\pure\languages 目录下语言文件，简体中文配置如下：</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">language: zh-CN<br></code></pre></td></tr></table></figure><h3 id="主题颜色"><a class="markdownIt-Anchor" href="#主题颜色"></a> 主题颜色</h3><p>定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> config</span><br>config:<br>  skin: # 主题颜色 theme-black theme-blue theme-green theme-purple<br></code></pre></td></tr></table></figure><h3 id="导航菜单"><a class="markdownIt-Anchor" href="#导航菜单"></a> 导航菜单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 导航菜单</span><br>menu:<br>  Home: .<br>  Archives: archives # 归档<br>  Categories: categories # 分类<br>  Tags: tags # 标签<br>  Repository: repository # github repositories<br>  Books: books     # 书单<br>  Links: links # 友链<br>  About: about # 关于<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 导航菜单图标（font awesome）</span><br>menu_icons:<br>  enable: true # 是否启用菜单图标<br>  home: icon-home-fill<br>  archives: icon-archives-fill<br>  categories: icon-folder<br>  tags: icon-tags<br>  repository: icon-project<br>  books: icon-book-fill<br>  links: icon-friendship<br>  about: icon-cup-fill<br></code></pre></td></tr></table></figure><h3 id="设置个人信息"><a class="markdownIt-Anchor" href="#设置个人信息"></a> 设置个人信息</h3><blockquote><p>头像在 themes\pure\source\images 目录下替换图片即可，捐献的二维码同理。</p><p>个人信息大部分都在 主题配置文件 中设置</p></blockquote><h3 id="搜索"><a class="markdownIt-Anchor" href="#搜索"></a> 搜索</h3><p>主题内置三种站内搜索方式：insight、swiftype、baidu</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Search</span><br>search:<br>  insight: true # you need to install `hexo-generator-json-content` before using Insight Search<br>  swiftype: # enter swiftype install key here<br>  baidu: false # you need to disable other search engines to use Baidu search<br></code></pre></td></tr></table></figure><h3 id="分享"><a class="markdownIt-Anchor" href="#分享"></a> 分享</h3><p>支持<code>weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Share</span><br><span class="hljs-comment"># weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</span><br><span class="hljs-attr">share:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 是否启用分享</span><br>  <span class="hljs-attr">sites:</span> <span class="hljs-string">weibo,qq,wechat,facebook,twitter</span>  <span class="hljs-comment"># PC端显示的分享图标</span><br>  <span class="hljs-attr">mobile_sites:</span> <span class="hljs-string">weibo,qq,qzone</span>  <span class="hljs-comment"># 移动端显示的分享图标</span><br></code></pre></td></tr></table></figure><h3 id="评论"><a class="markdownIt-Anchor" href="#评论"></a> 评论</h3><p>主题集成了<a href="https://disqus.com/">disqus</a>、<a href="http://www.uyan.cc/">友言</a>、<a href="https://livere.com/">来必力</a>、<a href="https://github.com/imsun/gitment">gitment</a>、<a href="https://github.com/gitalk/gitalk">gitalk</a>、<a href="https://valine.js.org">valine</a>评论系统，选择其中一种即可<br />本文中选择 valine 主题，简洁大方</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">comment:<br>  type: valine  # 启用哪种评论系统<br>  valine: # Valine. https://valine.js.org<br>    appid:   # your leancloud application appid<br>    appkey:  # your leancloud application appkey<br>    notify: false # mail notifier , https://github.com/xCss/Valine/wiki<br>    verify: false # Verification code<br>    placeholder: 每一份发言都值得被记录 # comment box placeholder<br>    avatar: mm # gravatar style<br>    meta: nick,mail,link # custom comment header<br>    pageSize: 10 # pagination size<br>    visitor: false # Article reading statistic https://valine.js.org/visitor.html<br><br></code></pre></td></tr></table></figure><h3 id="文章浏览量统计"><a class="markdownIt-Anchor" href="#文章浏览量统计"></a> 文章浏览量统计</h3><p>主题内置了不蒜子和 leancloud 来统计文章浏览量，启用其中之一即可，注意 leancloud 需要到其官网申请 APP ID 和 APP Key。</p><p>比如，启用不蒜子来统计文章浏览量，在主题配置文件中把 busuanzi 设置为 true 即可：</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">pv:<br>  busuanzi:<br>    enable: true  # 不蒜子统计<br></code></pre></td></tr></table></figure><p>如果不需要第三方来统计浏览量，只需将相应设置改为 false 即可（设置为 false 后不会加载第三方 JS 脚本）</p><h3 id="github-respostory"><a class="markdownIt-Anchor" href="#github-respostory"></a> Github respostory</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>repository</code>文件夹到<code>blog path/source/</code> 目录下</p><figure class="highlight dts"><table><tr><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># Github</span><br><span class="hljs-symbol">github:</span><br><span class="hljs-symbol">  username:</span> ***  <span class="hljs-meta"># github username</span><br></code></pre></td></tr></table></figure><h3 id="豆瓣书单"><a class="markdownIt-Anchor" href="#豆瓣书单"></a> 豆瓣书单</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>books</code>文件夹到<code>blog path/source/</code> 目录下</p><figure class="highlight dts"><table><tr><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># douban 豆瓣书单</span><br><span class="hljs-symbol">douban:</span><br><span class="hljs-symbol">  user:</span> *** <span class="hljs-meta"># 豆瓣用户名</span><br><span class="hljs-symbol">  start:</span> <span class="hljs-number">0</span> <span class="hljs-meta"># 从哪一条记录开始</span><br><span class="hljs-symbol">  count:</span> <span class="hljs-number">100</span> <span class="hljs-meta"># 获取豆瓣书单数据条数</span><br></code></pre></td></tr></table></figure><h3 id="友情链接"><a class="markdownIt-Anchor" href="#友情链接"></a> 友情链接</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>links</code>文件夹到<code>blog path/source/</code> 目录下</p><p>在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。</p><p>然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。</p><p>单个友情链接的格式为：</p><figure class="highlight dts"><table><tr><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">Name:</span><br><span class="hljs-symbol">    link:</span> http:<span class="hljs-comment">//example.com</span><br><span class="hljs-symbol">    avatar:</span> http:<span class="hljs-comment">//example.com/avatar.png</span><br><span class="hljs-symbol">    desc:</span> <span class="hljs-string">&quot;这是一个描述&quot;</span><br></code></pre></td></tr></table></figure><p>添加多个友情链接，我们只需要根据上面的格式重复填写即可。</p><p>. 将 Name 改为友情链接的名字，例如 Cofess。</p><p>. <a href="http://example.com">http://example.com</a> 为友情链接的地址。</p><p>. <a href="http://example.com/avatar.png">http://example.com/avatar.png</a> 为友情链接的头像。</p><p>. 这是一个描述 为友情链接描述。</p><h3 id="文章索引目录"><a class="markdownIt-Anchor" href="#文章索引目录"></a> 文章索引目录</h3><figure class="highlight subunit"><table><tr><td class="code"><pre><code class="hljs subunit">title: 文章标题<br>categories:<br>  - 文章分类<br><span class="hljs-keyword">tags:</span><br>  - 文章标签<br>toc: true # 是否启用内容索引<br></code></pre></td></tr></table></figure><h3 id="sidebar-侧边栏"><a class="markdownIt-Anchor" href="#sidebar-侧边栏"></a> sidebar 侧边栏</h3><p>文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：</p><figure class="highlight subunit"><table><tr><td class="code"><pre><code class="hljs subunit">title: 文章标题<br>categories:<br>  - 文章分类<br><span class="hljs-keyword">tags:</span><br>  - 文章标签<br>sidebar: none # 是否启用sidebar侧边栏，none：不启用<br></code></pre></td></tr></table></figure><h2 id="博客优化"><a class="markdownIt-Anchor" href="#博客优化"></a> 博客优化</h2><h3 id="hexo-neat"><a class="markdownIt-Anchor" href="#hexo-neat"></a> <a href="https://github.com/rozbo/hexo-neat">hexo-neat</a></h3><blockquote><p>auto Minify html、js、css and make it neat</p></blockquote><figure class="highlight ada"><table><tr><td class="code"><pre><code class="hljs ada">npm install hexo-neat <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># hexo-neat</span><br><span class="hljs-attr">neat_enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">neat_html:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span><br><span class="hljs-attr">neat_css:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;*.min.css&#x27;</span><br><span class="hljs-attr">neat_js:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">mangle:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">output:</span><br>  <span class="hljs-attr">compress:</span><br>  <span class="hljs-attr">exclude:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;*.min.js&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="hexo-baidu-url-submit"><a class="markdownIt-Anchor" href="#hexo-baidu-url-submit"></a> <a href="https://github.com/huiwang/hexo-baidu-url-submit">hexo-baidu-url-submit</a></h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span>hexo-<span class="hljs-keyword">baidu-url-submit </span>--save<br></code></pre></td></tr></table></figure><h3 id="hexo-translate-title"><a class="markdownIt-Anchor" href="#hexo-translate-title"></a> <a href="https://github.com/cometlj/hexo-translate-title">hexo-translate-title</a></h3><blockquote><p>使用 Google 翻译，百度翻译和有道翻译将 Hexo 中的汉字标题转成英文标题</p></blockquote><p>安装</p><figure class="highlight maxima"><table><tr><td class="code"><pre><code class="hljs maxima">npm install hexo-<span class="hljs-built_in">translate</span>-<span class="hljs-built_in">title</span> --<span class="hljs-built_in">save</span><br></code></pre></td></tr></table></figure><p>在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">translate_title:</span><br>  <span class="hljs-attr">translate_way:</span> <span class="hljs-string">google</span> <span class="hljs-comment">#google | baidu | youdao</span><br>  <span class="hljs-attr">youdao_api_key:</span> <span class="hljs-string">XXX</span><br>  <span class="hljs-attr">youdao_keyfrom:</span> <span class="hljs-string">XXX</span><br>  <span class="hljs-attr">is_need_proxy:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#true | false</span><br>  <span class="hljs-attr">proxy_url:</span> <span class="hljs-string">http://localhost:8123</span><br></code></pre></td></tr></table></figure><p><strong>注意</strong>：判断是否需要配置 google 本地代理，因为我在本地是开启时才能访问 google 翻译的，如果没有被墙，请将<code>_config.yml</code> 下的<code>is_need_proxy: true</code>改为 false。如果设置为 true,请设置本地代理地址</p><h2 id="数学公式"><a class="markdownIt-Anchor" href="#数学公式"></a> 数学公式</h2><blockquote><p>Hexo 默认使用&quot;hexo-renderer-marked&quot;引擎渲染网页，该引擎会把一些特殊的 markdown 符号转换为相应的 html 标签</p></blockquote><h3 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h3><p>解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。</p><p>更换 Hexo 的 markdown 渲染引擎，<a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus">hexo-renderer-markdown-it-plus</a>引擎替换默认的渲染引擎<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>即可。</p><h3 id="安装-hexo-renderer-markdown-it-plus-插件"><a class="markdownIt-Anchor" href="#安装-hexo-renderer-markdown-it-plus-插件"></a> 安装 hexo-renderer-markdown-it-plus 插件</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><code class="hljs applescript">npm un hexo-renderer-marked <span class="hljs-comment">--save</span><br>npm i hexo-renderer-markdown-<span class="hljs-keyword">it</span>-plus <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h3 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h3><p>安装插件后，如果未正常渲染 LaTeX 数学公式，在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">markdown_it_plus:</span><br>  <span class="hljs-attr">highlight:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">html:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">xhtmlOut:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">breaks:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">langPrefix:</span><br>  <span class="hljs-attr">linkify:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">typographer:</span><br>  <span class="hljs-attr">quotes:</span> <span class="hljs-string">“”‘’</span><br>  <span class="hljs-attr">plugins:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">plugin:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">markdown-it-katex</span><br>        <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">plugin:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">markdown-it-mark</span><br>        <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h3 id="文章启用-mathjax"><a class="markdownIt-Anchor" href="#文章启用-mathjax"></a> 文章启用 mathjax</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-attr">mathjax:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;特色&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#特色&quot;&gt;&lt;/a&gt; 特色&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;多语言&lt;/li&gt;
&lt;li&gt;第三方评论框（友言、来必力、gitment、gitalk）&lt;/li&gt;
&lt;li&gt;可展示个人豆瓣书单&lt;/li&gt;
      
    
    </summary>
    
    
      <category term="博客" scheme="https://shiyutian.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo系列" scheme="https://shiyutian.com/tags/Hexo%E7%B3%BB%E5%88%97/"/>
    
      <category term="教程" scheme="https://shiyutian.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客系列-1：搭建GithubPages + Hexo博客</title>
    <link href="https://shiyutian.com/2019/11/26/yuque/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97-1%EF%BC%9A%E6%90%AD%E5%BB%BAGithubPages%20+%20Hexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://shiyutian.com/2019/11/26/yuque/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97-1%EF%BC%9A%E6%90%AD%E5%BB%BAGithubPages%20+%20Hexo%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-11-25T16:15:20.000Z</published>
    <updated>2021-05-28T04:38:03.085Z</updated>
    
    <content type="html"><![CDATA[<p>前言：Hexo 是一款基于 Node.js 的简单轻量静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在 GitHub 和 Coding 上，是搭建博客的首选框架。</p><span id="more"></span><h2 id="hexo-博客搭建"><a class="markdownIt-Anchor" href="#hexo-博客搭建"></a> Hexo 博客搭建</h2><h3 id="安装-git"><a class="markdownIt-Anchor" href="#安装-git"></a> 安装 Git</h3><ol><li>mac 安装</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">brew install git<br></code></pre></td></tr></table></figure><ol start="2"><li>windows 安装</li></ol><p><a href="https://gitforwindows.org/">git 下载</a></p><ol start="3"><li>安装完成后验证</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">git --version<br></code></pre></td></tr></table></figure><h3 id="安装-nodejs"><a class="markdownIt-Anchor" href="#安装-nodejs"></a> 安装 nodejs</h3><ol><li>mac 安装</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">brew install node<br></code></pre></td></tr></table></figure><ol start="2"><li>windows 安装</li></ol><p><a href="https://nodejs.org/en/download/">nodejs 地址，选择 LTS 版本</a></p><ol start="3"><li>安装完成后验证</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">node -v<br>npm -v<br></code></pre></td></tr></table></figure><h3 id="安装-hexo"><a class="markdownIt-Anchor" href="#安装-hexo"></a> 安装 hexo</h3><ol><li>安装 hexo</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><ol start="2"><li>验证 hexo</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">hexo -v<br></code></pre></td></tr></table></figure><ol start="3"><li>创建 Hexo 博客项目</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">hexo init myblog<br>cd myblog<br>npm install<br></code></pre></td></tr></table></figure><p>完成后目录结构如下：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul><ol start="4"><li>运行 Hexo 项目</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">hexo g<br>hexo server<br></code></pre></td></tr></table></figure><blockquote><p>hexo 的服务，在浏览器输入 localhost:4000 就可以看到你生成的博客了</p></blockquote><h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2><h2 id="配置-githubpages-主页"><a class="markdownIt-Anchor" href="#配置-githubpages-主页"></a> 配置 GithubPages 主页</h2><h3 id="注册-github-账户"><a class="markdownIt-Anchor" href="#注册-github-账户"></a> 注册 github 账户</h3><p>首先，你先要有一个 GitHub 账户，去注册一个吧。<br />注册完登录后，在 <a href="http://GitHub.com">GitHub.com</a> 中看到一个 New repository，新建仓库[yourname].github.io<br />点击 create repository。</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;yourname&quot;<br>git config --global user.email &quot;youremail&quot;<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 检查</span><br>git config user.name<br>git config user.email<br></code></pre></td></tr></table></figure><h3 id="生成-ssh"><a class="markdownIt-Anchor" href="#生成-ssh"></a> 生成 SSH</h3><p>执行如下命令，一直回车即可</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;youremail&quot;<br></code></pre></td></tr></table></figure><blockquote><p>ssh，简单来讲，就是一个秘钥，其中，id_rsa 是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub 是公共秘钥，可以随便给别人看。把这个公钥放在 GitHub 上，这样当你链接 GitHub 自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过 git 上传你的文件到 GitHub 上。</p></blockquote><h3 id="上传公钥到-github"><a class="markdownIt-Anchor" href="#上传公钥到-github"></a> 上传公钥到 GitHub</h3><ol><li>在 mac 中找到<code>~/.ssh/id_rsa.pub</code></li><li>在 GitHub 的 Setting &gt; SSH and GPG keys 中，找到 SSH keys 的设置选项，点击 New SSH key</li><li>把你的 id_rsa.pub 里面的信息复制进去。</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/264294/1574749300215-4951a6bb-34e4-4b83-803d-b0e9c19a75b0.jpeg#align=left&amp;display=inline&amp;height=1080&amp;originHeight=1080&amp;originWidth=2411&amp;size=0&amp;status=done&amp;width=2411" alt="" /></p><h3 id="验证-ssh"><a class="markdownIt-Anchor" href="#验证-ssh"></a> 验证 SSH</h3><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">ssh -T git@github.com<br></code></pre></td></tr></table></figure><h2 id="部署-hexo-到-github"><a class="markdownIt-Anchor" href="#部署-hexo-到-github"></a> 部署 hexo 到 GitHub</h2><h3 id="修改配置"><a class="markdownIt-Anchor" href="#修改配置"></a> 修改配置</h3><p>修改<code>_config.yml</code>配置如下</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">deploy:<br>  type: git<br>  repo: git@github.com:YourgithubName/YourgithubName.github.io.git<br>  branch: master<br></code></pre></td></tr></table></figure><h2 id="安装插件"><a class="markdownIt-Anchor" href="#安装插件"></a> 安装插件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h3 id="执行同步"><a class="markdownIt-Anchor" href="#执行同步"></a> 执行同步</h3><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">hexo clean<br>hexo generate<br>hexo deploy<br></code></pre></td></tr></table></figure><h2 id="设置自己的域名"><a class="markdownIt-Anchor" href="#设置自己的域名"></a> 设置自己的域名</h2><h3 id="默认访问地址如下"><a class="markdownIt-Anchor" href="#默认访问地址如下"></a> 默认访问地址如下</h3><p>[YourgithubName].github.io</p><h3 id="配置-github-为私有域名"><a class="markdownIt-Anchor" href="#配置-github-为私有域名"></a> 配置 GITHUB 为私有域名</h3><p>在如下配置页面设置私有域名为你自己购买的域名 如:blog.heidi.pub<br /><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/264294/1574749319525-5c29c261-635f-425e-983e-4c2f03690432.jpeg#align=left&amp;display=inline&amp;height=1080&amp;originHeight=1080&amp;originWidth=2105&amp;size=0&amp;status=done&amp;width=2105" alt="" /></p><h3 id="设置-cname"><a class="markdownIt-Anchor" href="#设置-cname"></a> 设置 CNAME</h3><p>在域名后端将 blog.heidi.pub 解析为  [YourgithubName].github.io</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言：Hexo 是一款基于 Node.js 的简单轻量静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在 GitHub 和 Coding 上，是搭建博客的首选框架。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客" scheme="https://shiyutian.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo系列" scheme="https://shiyutian.com/tags/Hexo%E7%B3%BB%E5%88%97/"/>
    
      <category term="教程" scheme="https://shiyutian.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客系列-2：增加coding发布源，绑定自己的域名，增加https访问</title>
    <link href="https://shiyutian.com/2019/11/26/yuque/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97-2%EF%BC%9A%E5%A2%9E%E5%8A%A0coding%E5%8F%91%E5%B8%83%E6%BA%90%EF%BC%8C%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%EF%BC%8C%E5%A2%9E%E5%8A%A0https%E8%AE%BF%E9%97%AE/"/>
    <id>https://shiyutian.com/2019/11/26/yuque/Hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97-2%EF%BC%9A%E5%A2%9E%E5%8A%A0coding%E5%8F%91%E5%B8%83%E6%BA%90%EF%BC%8C%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%EF%BC%8C%E5%A2%9E%E5%8A%A0https%E8%AE%BF%E9%97%AE/</id>
    <published>2019-11-25T16:15:20.000Z</published>
    <updated>2021-05-28T04:38:03.041Z</updated>
    
    <content type="html"><![CDATA[<p>前言：Hexo 是一款基于 Node.js 的简单轻量静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在 GitHub 和 Coding 上，是搭建博客的首选框架。</p><span id="more"></span><h2 id="增加-coding-发布源"><a class="markdownIt-Anchor" href="#增加-coding-发布源"></a> 增加 coding 发布源</h2><p>首先，去官网登陆你的 coding 账号，没有就注册一个，然后完善个人信息，。然后新建一个 repository，项目名称就填你的用户名，选择私有，然后创建项目。</p><h3 id="创建项目"><a class="markdownIt-Anchor" href="#创建项目"></a> 创建项目</h3><p>项目地址格式是 <a href="http://xn--6qqv7i2xdt95b.coding.me">你的域名.coding.me</a></p><h3 id="选择静态页面服务"><a class="markdownIt-Anchor" href="#选择静态页面服务"></a> 选择静态页面服务</h3><p>企业版界面如下<br /><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/264294/1574901761377-029a06dd-f6c8-4a0e-88c7-1a4353d32509.jpeg#align=left&amp;display=inline&amp;height=1080&amp;originHeight=1080&amp;originWidth=2134&amp;size=0&amp;status=done&amp;width=2134" alt="" /></p><h3 id="配置-ssh-公钥"><a class="markdownIt-Anchor" href="#配置-ssh-公钥"></a> 配置 SSH 公钥</h3><p>同 Github<br />首先点击右上角的头像-个人设置-SSH 公钥-新增公匙-输入你自己的 SSH 公匙-永久有效(推荐)-确定即可。<br />如果你之前部署过 github 用同一个公匙是没问题的。</p><h3 id="配置-hexo-的_configyml"><a class="markdownIt-Anchor" href="#配置-hexo-的_configyml"></a> 配置 hexo 的_config.yml</h3><p>实例如下</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Deployment</span><br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># Docs: https://hexo.io/docs/deployment.html</span></span><br>deploy:<br>  type: git<br>  repo:<br>      github: git@github.com:DevinShi2019/DevinShi2019.github.io.git,master<br>      coding: git@e.coding.net:sdf-system/blog-hexo.git,master<br><br></code></pre></td></tr></table></figure><h3 id="配置travisssh_config"><a class="markdownIt-Anchor" href="#配置travisssh_config"></a> 配置<code>.travis/ssh_config</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">Host github.com<br>  HostName github.com<br>  User git<br>  StrictHostKeyChecking no<br>  IdentityFile ~/.ssh/id_rsa<br>  IdentitiesOnly yes<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 我这里使用的企业版，所以域名是e.coding.net</span><br>Host e.coding.net<br>  HostName e.coding.net<br>  User git<br>  StrictHostKeyChecking no<br>  IdentityFile ~/.ssh/id_rsa<br>  IdentitiesOnly yes<br></code></pre></td></tr></table></figure><h3 id="发布"><a class="markdownIt-Anchor" href="#发布"></a> 发布</h3><p>配置完之后，提交代码到 master 分支即可</p><h2 id="绑定自己的域名并申请-https"><a class="markdownIt-Anchor" href="#绑定自己的域名并申请-https"></a> 绑定自己的域名并申请 Https</h2><h3 id="域名-cname-配置"><a class="markdownIt-Anchor" href="#域名-cname-配置"></a> 域名 CNAME 配置</h3><p>配置自由域名如</p><ul><li>blog.sdf.heidi.pub CNAME 境外 <a href="http://devinshi2019.github.io">devinshi2019.github.io</a></li><li>blog.sdf.heidi.pub CNAME 默认  <a href="http://zfr5mu.coding-pages.com">zfr5mu.coding-pages.com</a></li></ul><h3 id="github-配置"><a class="markdownIt-Anchor" href="#github-配置"></a> Github 配置</h3><p><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/264294/1574865641700-d173e1bc-f6ab-4044-aee1-06aeae9612af.jpeg#align=left&amp;display=inline&amp;height=1080&amp;originHeight=1080&amp;originWidth=1561&amp;size=0&amp;status=done&amp;width=1561" alt="" /></p><blockquote><p>如需要 https，需要勾上此选项，等待大概 1 天左右</p></blockquote><h3 id="coding-配置"><a class="markdownIt-Anchor" href="#coding-配置"></a> Coding 配置</h3><p>此处配置，并点击右侧操作的申请证书，完成之后如下<br /><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/264294/1574840265197-53a2c333-0ebf-414d-af4d-40033dbc899d.jpeg#align=left&amp;display=inline&amp;height=604&amp;originHeight=604&amp;originWidth=3244&amp;size=0&amp;status=done&amp;width=3244" alt="" /></p><blockquote><p>如需要 https，需要先禁用掉 blog.sdf.heidi.pub 指向 github 的解析，等待 1 个小时左右生效后，再启用</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言：Hexo 是一款基于 Node.js 的简单轻量静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在 GitHub 和 Coding 上，是搭建博客的首选框架。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客" scheme="https://shiyutian.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo系列" scheme="https://shiyutian.com/tags/Hexo%E7%B3%BB%E5%88%97/"/>
    
      <category term="教程" scheme="https://shiyutian.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
